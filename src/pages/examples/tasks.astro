---
import TasksStatus from "examples/partials/tasks-status.astro";
import TasksPriority from "examples/partials/tasks-priority.astro";
import Example from "layouts/example.astro";

const doc = {
  title: "Tasks",
  meta: {
    description: "",
  },
};

const data = [
  {
    selected: true,
    id: "TASK-8782",
    title:
      "You can't compress the program without quantifying the open-source SSD pixel!",
    status: "progress",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-7878",
    title:
      "Try to calculate the EXE feed, maybe it will index the multi-byte pixel!",
    status: "backlog",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-7839",
    title: "We need to bypass the neural TCP card!",
    status: "todo",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-5562",
    title:
      "The SAS interface is down, bypass the open-source pixel so we can back up the PNG bandwidth!",
    status: "backlog",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-8686",
    title:
      "I'll parse the wireless SSL protocol, that should driver the API panel!",
    status: "cancelled",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-1280",
    title:
      "Use the digital TLS panel, then you can transmit the haptic system!",
    status: "done",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-7262",
    title:
      "The UTF8 application is down, parse the neural bandwidth so we can back up the PNG firewall!",
    status: "done",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1138",
    title:
      "Generating the driver won't do anything, we need to quantify the 1080p SMTP bandwidth!",
    status: "progress",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-7184",
    title: "We need to program the back-end THX pixel!",
    status: "todo",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-5160",
    title:
      "Calculating the bus won't do anything, we need to navigate the back-end JSON protocol!",
    status: "progress",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-5618",
    title:
      "Generating the driver won't do anything, we need to index the online SSL application!",
    status: "done",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-6699",
    title:
      "I'll transmit the wireless JBOD capacitor, that should hard drive the SSD feed!",
    status: "backlog",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-2858",
    title: "We need to override the online UDP bus!",
    status: "backlog",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9864",
    title:
      "I'll reboot the 1080p FTP panel, that should matrix the HEX hard drive!",
    status: "done",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-8404",
    title: "We need to generate the virtual HEX alarm!",
    status: "progress",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-5365",
    title:
      "Backing up the pixel won't do anything, we need to transmit the primary IB array!",
    status: "progress",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-1780",
    title:
      "The CSS feed is down, index the bluetooth transmitter so we can compress the CLI protocol!",
    status: "todo",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-6938",
    title:
      "Use the redundant SCSI application, then you can hack the optical alarm!",
    status: "todo",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-9885",
    title: "We need to compress the auxiliary VGA driver!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-3216",
    title:
      "Transmitting the transmitter won't do anything, we need to compress the virtual HDD sensor!",
    status: "backlog",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9285",
    title:
      "The IP monitor is down, copy the haptic alarm so we can generate the HTTP transmitter!",
    status: "todo",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1024",
    title:
      "Overriding the microchip won't do anything, we need to transmit the digital OCR transmitter!",
    status: "progress",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7068",
    title:
      "You can't generate the capacitor without indexing the wireless HEX pixel!",
    status: "cancelled",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6502",
    title:
      "Navigating the microchip won't do anything, we need to bypass the back-end SQL bus!",
    status: "todo",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-5326",
    title: "We need to hack the redundant UTF8 transmitter!",
    status: "todo",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6274",
    title:
      "Use the virtual PCI circuit, then you can parse the bluetooth alarm!",
    status: "cancelled",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-1571",
    title:
      "I'll input the neural DRAM circuit, that should protocol the SMTP interface!",
    status: "progress",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9518",
    title:
      "Compressing the interface won't do anything, we need to compress the online SDD matrix!",
    status: "cancelled",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-5581",
    title:
      "I'll synthesize the digital COM pixel, that should transmitter the UTF8 protocol!",
    status: "backlog",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-2197",
    title:
      "Parsing the feed won't do anything, we need to copy the bluetooth DRAM bus!",
    status: "todo",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-8484",
    title: "We need to parse the solid state UDP firewall!",
    status: "progress",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-9892",
    title:
      "If we back up the application, we can get to the UDP application through the multi-byte THX capacitor!",
    status: "done",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-9616",
    title: "We need to synthesize the cross-platform ASCII pixel!",
    status: "progress",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9744",
    title:
      "Use the back-end IP card, then you can input the solid state hard drive!",
    status: "done",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-1376",
    title:
      "Generating the alarm won't do anything, we need to generate the mobile IP capacitor!",
    status: "backlog",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7382",
    title:
      "If we back up the firewall, we can get to the RAM alarm through the primary UTF8 pixel!",
    status: "todo",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-2290",
    title:
      "I'll compress the virtual JSON panel, that should application the UTF8 bus!",
    status: "cancelled",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1533",
    title:
      "You can't input the firewall without overriding the wireless TCP firewall!",
    status: "done",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-4920",
    title:
      "Bypassing the hard drive won't do anything, we need to input the bluetooth JSON program!",
    status: "progress",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-5168",
    title:
      "If we synthesize the bus, we can get to the IP panel through the virtual TLS array!",
    status: "progress",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7103",
    title: "We need to parse the multi-byte EXE bandwidth!",
    status: "cancelled",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-4314",
    title:
      "If we compress the program, we can get to the XML alarm through the multi-byte COM matrix!",
    status: "progress",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-3415",
    title:
      "Use the cross-platform XML application, then you can quantify the solid state feed!",
    status: "todo",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-8339",
    title:
      "Try to calculate the DNS interface, maybe it will input the bluetooth capacitor!",
    status: "progress",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6995",
    title:
      "Try to hack the XSS bandwidth, maybe it will override the bluetooth matrix!",
    status: "todo",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-8053",
    title:
      "If we connect the program, we can get to the UTF8 matrix through the digital UDP protocol!",
    status: "todo",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-4336",
    title:
      "If we synthesize the microchip, we can get to the SAS sensor through the optical UDP program!",
    status: "todo",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-8790",
    title:
      "I'll back up the optical COM alarm, that should alarm the RSS capacitor!",
    status: "done",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-8980",
    title:
      "Try to navigate the SQL transmitter, maybe it will back up the virtual firewall!",
    status: "cancelled",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7342",
    title: "Use the neural CLI card, then you can parse the online port!",
    status: "backlog",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-5608",
    title:
      "I'll hack the haptic SSL program, that should bus the UDP transmitter!",
    status: "cancelled",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-1606",
    title:
      "I'll generate the bluetooth PNG firewall, that should pixel the SSL driver!",
    status: "done",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-7872",
    title:
      "Transmitting the circuit won't do anything, we need to reboot the 1080p RSS monitor!",
    status: "cancelled",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-4167",
    title:
      "Use the cross-platform SMS circuit, then you can synthesize the optical feed!",
    status: "cancelled",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9581",
    title:
      "You can't index the port without hacking the cross-platform XSS monitor!",
    status: "backlog",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-8806",
    title: "We need to bypass the back-end SSL panel!",
    status: "done",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-6542",
    title:
      "Try to quantify the RSS firewall, maybe it will quantify the open-source system!",
    status: "done",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6806",
    title:
      "The VGA protocol is down, reboot the back-end matrix so we can parse the CSS panel!",
    status: "cancelled",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-9549",
    title: "You can't bypass the bus without connecting the neural JBOD bus!",
    status: "todo",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1075",
    title:
      "Backing up the driver won't do anything, we need to parse the redundant RAM pixel!",
    status: "done",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-1427",
    title:
      "Use the auxiliary PCI circuit, then you can calculate the cross-platform interface!",
    status: "done",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1907",
    title:
      "Hacking the circuit won't do anything, we need to back up the online DRAM system!",
    status: "todo",
    label: "documentation",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-4309",
    title:
      "If we generate the system, we can get to the TCP sensor through the optical GB pixel!",
    status: "backlog",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3973",
    title:
      "I'll parse the back-end ADP array, that should bandwidth the RSS bandwidth!",
    status: "todo",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-7962",
    title:
      "Use the wireless RAM program, then you can hack the cross-platform feed!",
    status: "cancelled",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-3360",
    title:
      "You can't quantify the program without synthesizing the neural OCR interface!",
    status: "done",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-9887",
    title:
      "Use the auxiliary ASCII sensor, then you can connect the solid state port!",
    status: "backlog",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3649",
    title:
      "I'll input the virtual USB system, that should circuit the DNS monitor!",
    status: "progress",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3586",
    title:
      "If we quantify the circuit, we can get to the CLI feed through the mobile SMS hard drive!",
    status: "progress",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-5150",
    title:
      "I'll hack the wireless XSS port, that should transmitter the IP interface!",
    status: "cancelled",
    label: "feature",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3652",
    title:
      "The SQL interface is down, override the optical bus so we can program the ASCII interface!",
    status: "backlog",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6884",
    title:
      "Use the digital PCI circuit, then you can synthesize the multi-byte microchip!",
    status: "cancelled",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1591",
    title: "We need to connect the mobile XSS driver!",
    status: "progress",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-3802",
    title:
      "Try to override the ASCII protocol, maybe it will parse the virtual matrix!",
    status: "progress",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7253",
    title:
      "Programming the capacitor won't do anything, we need to bypass the neural IB hard drive!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-9739",
    title: "We need to hack the multi-byte HDD bus!",
    status: "done",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-4424",
    title:
      "Try to hack the HEX alarm, maybe it will connect the optical pixel!",
    status: "progress",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3922",
    title:
      "You can't back up the capacitor without generating the wireless PCI program!",
    status: "backlog",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-4921",
    title:
      "I'll index the open-source IP feed, that should system the GB application!",
    status: "cancelled",
    label: "bug",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-5814",
    title: "We need to calculate the 1080p AGP feed!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-2645",
    title:
      "Synthesizing the system won't do anything, we need to navigate the multi-byte HDD firewall!",
    status: "todo",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-4535",
    title:
      "Try to copy the JSON circuit, maybe it will connect the wireless feed!",
    status: "progress",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-4463",
    title: "We need to copy the solid state AGP monitor!",
    status: "done",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-9745",
    title:
      "If we connect the protocol, we can get to the GB system through the bluetooth PCI microchip!",
    status: "cancelled",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-2080",
    title:
      "If we input the bus, we can get to the RAM matrix through the auxiliary RAM card!",
    status: "todo",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3838",
    title:
      "I'll bypass the online TCP application, that should panel the AGP system!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-1340",
    title: "We need to navigate the virtual PNG circuit!",
    status: "todo",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-6665",
    title:
      "If we parse the monitor, we can get to the SSD hard drive through the cross-platform AGP alarm!",
    status: "cancelled",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-7585",
    title:
      "If we calculate the hard drive, we can get to the SSL program through the multi-byte CSS microchip!",
    status: "backlog",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-6319",
    title: "We need to copy the multi-byte SCSI program!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-4369",
    title: "Try to input the SCSI bus, maybe it will generate the 1080p pixel!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-9035",
    title: "We need to override the solid state PNG array!",
    status: "cancelled",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-3970",
    title:
      "You can't index the transmitter without quantifying the haptic ASCII card!",
    status: "todo",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-4473",
    title:
      "You can't bypass the protocol without overriding the neural RSS program!",
    status: "todo",
    label: "documentation",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-4136",
    title:
      "You can't hack the hard drive without hacking the primary JSON program!",
    status: "cancelled",
    label: "bug",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-3939",
    title:
      "Use the back-end SQL firewall, then you can connect the neural hard drive!",
    status: "done",
    label: "feature",
    priority: "low",
  },
  {
    selected: false,
    id: "TASK-2007",
    title:
      "I'll input the back-end USB protocol, that should bandwidth the PCI system!",
    status: "backlog",
    label: "bug",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-7516",
    title:
      "Use the primary SQL program, then you can generate the auxiliary transmitter!",
    status: "done",
    label: "documentation",
    priority: "medium",
  },
  {
    selected: false,
    id: "TASK-6906",
    title:
      "Try to back up the DRAM system, maybe it will reboot the online transmitter!",
    status: "done",
    label: "feature",
    priority: "high",
  },
  {
    selected: false,
    id: "TASK-5207",
    title:
      "The SMS interface is down, copy the bluetooth bus so we can quantify the VGA card!",
    status: "progress",
    label: "bug",
    priority: "low",
  },
];
---

<Example active="tasks" doc={doc}>
  <div class="hidden lg:block">
    <div class="p-8">
      <div class="flex items-center justify-between space-y-2">
        <div class="flex-1">
          <h2 class="text-2xl font-bold tracking-tight">Welcome back!</h2>
          <p class="text-muted-foreground">
            Here's a list of your tasks for this month!
          </p>
        </div>

        <div class="flex-none">
          <a
            class="inline-flex h-8 w-8 items-center justify-center rounded-full bg-accent ring-ring focus:outline-none focus-visible:ring-1"
            href="#"
          >
            <span
              class="relative flex h-8 w-8 shrink-0 overflow-hidden rounded-full"
            >
              <img
                class="aspect-square h-full w-full"
                alt="@shadcn"
                src="https://api.dicebear.com/8.x/lorelei/svg?seed=sveltecult"
              />
            </span>
          </a>
          <div
            class="uk-drop uk-dropdown"
            uk-dropdown="mode: click; pos: bottom-right"
          >
            <ul class="uk-dropdown-nav uk-nav">
              <li class="px-2 py-1.5 text-sm">
                <div class="flex flex-col space-y-1">
                  <p class="text-sm font-medium leading-none">sveltecult</p>
                  <p class="text-xs leading-none text-muted-foreground">
                    leader@sveltecult.com
                  </p>
                </div>
              </li>
              <li class="uk-nav-divider"></li>
              <li>
                <a class="uk-drop-close justify-between" href="#demo" uk-toggle>
                  Profile
                  <span class="ml-auto text-xs tracking-widest opacity-60">
                    ⇧⌘P
                  </span>
                </a>
              </li>
              <li>
                <a class="uk-drop-close justify-between" href="#demo" uk-toggle>
                  Billing
                  <span class="ml-auto text-xs tracking-widest opacity-60">
                    ⌘B
                  </span>
                </a>
              </li>
              <li>
                <a class="uk-drop-close justify-between" href="#demo" uk-toggle>
                  Settings
                  <span class="ml-auto text-xs tracking-widest opacity-60">
                    ⌘S
                  </span>
                </a>
              </li>
              <li>
                <a class="uk-drop-close justify-between" href="#demo" uk-toggle>
                  New Team
                </a>
              </li>
              <li class="uk-nav-divider"></li>
              <li>
                <a class="uk-drop-close justify-between" href="#demo" uk-toggle>
                  Logout
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>

      <div class="mt-8 flex items-center justify-between">
        <div class="flex flex-1 gap-4">
          <div class="w-[250px]">
            <input class="uk-input" type="text" placeholder="Filter task" />
          </div>
          <button
            class="inline-flex items-center justify-center rounded-md border border-dashed border-input px-3 text-xs font-medium shadow-sm hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring"
          >
            <svg
              width="15"
              height="15"
              viewBox="0 0 15 15"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              class="mr-2 h-4 w-4"
              ><path
                d="M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM7.50003 4C7.77617 4 8.00003 4.22386 8.00003 4.5V7H10.5C10.7762 7 11 7.22386 11 7.5C11 7.77614 10.7762 8 10.5 8H8.00003V10.5C8.00003 10.7761 7.77617 11 7.50003 11C7.22389 11 7.00003 10.7761 7.00003 10.5V8H4.50003C4.22389 8 4.00003 7.77614 4.00003 7.5C4.00003 7.22386 4.22389 7 4.50003 7H7.00003V4.5C7.00003 4.22386 7.22389 4 7.50003 4Z"
                fill="currentColor"
                fill-rule="evenodd"
                clip-rule="evenodd"></path></svg
            >
            Status
          </button>
          <div
            class="uk-drop uk-dropdown"
            uk-drop="mode: click; pos: bottom-left"
          >
            <div class="m-1 flex items-center px-2 py-1.5">
              <span class="opacity-50" uk-icon="icon: search; ratio: 0.8"
              ></span>
              <input
                class="block w-full pl-2 text-sm focus:outline-none"
                placeholder="Status"
                type="text"
              />
            </div>
            <ul class="uk-dropdown-nav">
              <li class="uk-nav-divider"></li>
              {
                [
                  { status: "backlog", count: 21 },
                  { status: "todo", count: 21 },
                  { status: "progress", count: 20 },
                  { status: "done", count: 19 },
                  { status: "cancelled", count: 19 },
                ].map((a) => (
                  <li>
                    <a class="uk-drop-close" href="#demo" uk-toggle>
                      <div class="flex flex-1 items-center justify-between">
                        <TasksStatus status={a.status} />
                        <span class="font-geist-mono text-xs">{a.count}</span>
                      </div>
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>

          <button
            class="inline-flex items-center justify-center rounded-md border border-dashed border-input px-3 text-xs font-medium shadow-sm hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring"
          >
            <svg
              width="15"
              height="15"
              viewBox="0 0 15 15"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              class="mr-2 h-4 w-4"
              ><path
                d="M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM7.50003 4C7.77617 4 8.00003 4.22386 8.00003 4.5V7H10.5C10.7762 7 11 7.22386 11 7.5C11 7.77614 10.7762 8 10.5 8H8.00003V10.5C8.00003 10.7761 7.77617 11 7.50003 11C7.22389 11 7.00003 10.7761 7.00003 10.5V8H4.50003C4.22389 8 4.00003 7.77614 4.00003 7.5C4.00003 7.22386 4.22389 7 4.50003 7H7.00003V4.5C7.00003 4.22386 7.22389 4 7.50003 4Z"
                fill="currentColor"
                fill-rule="evenodd"
                clip-rule="evenodd"></path></svg
            >
            Priority
          </button>
          <div
            class="uk-drop uk-dropdown"
            uk-drop="mode: click; pos: bottom-left"
          >
            <ul class="uk-dropdown-nav">
              {
                [
                  { priority: "low", count: 36 },
                  { priority: "medium", count: 33 },
                  { priority: "high", count: 31 },
                ].map((a) => (
                  <li>
                    <a class="uk-drop-close" href="#demo" uk-toggle>
                      <div class="flex flex-1 items-center justify-between">
                        <TasksPriority priority={a.priority} />
                        <span class="font-geist-mono text-xs">{a.count}</span>
                      </div>
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
        </div>

        <div class="">
          <button class="uk-button uk-button-default">
            <svg
              width="15"
              height="15"
              viewBox="0 0 15 15"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              class="mr-2 h-4 w-4"
              ><path
                d="M5.5 3C4.67157 3 4 3.67157 4 4.5C4 5.32843 4.67157 6 5.5 6C6.32843 6 7 5.32843 7 4.5C7 3.67157 6.32843 3 5.5 3ZM3 5C3.01671 5 3.03323 4.99918 3.04952 4.99758C3.28022 6.1399 4.28967 7 5.5 7C6.71033 7 7.71978 6.1399 7.95048 4.99758C7.96677 4.99918 7.98329 5 8 5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H8C7.98329 4 7.96677 4.00082 7.95048 4.00242C7.71978 2.86009 6.71033 2 5.5 2C4.28967 2 3.28022 2.86009 3.04952 4.00242C3.03323 4.00082 3.01671 4 3 4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H3ZM11.9505 10.9976C11.7198 12.1399 10.7103 13 9.5 13C8.28967 13 7.28022 12.1399 7.04952 10.9976C7.03323 10.9992 7.01671 11 7 11H1.5C1.22386 11 1 10.7761 1 10.5C1 10.2239 1.22386 10 1.5 10H7C7.01671 10 7.03323 10.0008 7.04952 10.0024C7.28022 8.8601 8.28967 8 9.5 8C10.7103 8 11.7198 8.8601 11.9505 10.0024C11.9668 10.0008 11.9833 10 12 10H13.5C13.7761 10 14 10.2239 14 10.5C14 10.7761 13.7761 11 13.5 11H12C11.9833 11 11.9668 10.9992 11.9505 10.9976ZM8 10.5C8 9.67157 8.67157 9 9.5 9C10.3284 9 11 9.67157 11 10.5C11 11.3284 10.3284 12 9.5 12C8.67157 12 8 11.3284 8 10.5Z"
                fill="currentColor"
                fill-rule="evenodd"
                clip-rule="evenodd"></path></svg
            >
            View
          </button>
          <div
            class="uk-drop uk-dropdown"
            uk-drop="mode: click; pos: bottom-right"
          >
            <ul class="uk-dropdown-nav">
              <li class="uk-nav-header">Toggle columns</li>
              <li class="uk-nav-divider"></li>
              <li>
                <a class="uk-drop-close" href="#demo" uk-toggle>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="lucide lucide-check mr-2"
                  >
                    <path d="M20 6 9 17l-5-5"></path>
                  </svg>
                  Title
                </a>
              </li>
              <li>
                <a class="uk-drop-close" href="#demo" uk-toggle>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="lucide lucide-check mr-2"
                  >
                    <path d="M20 6 9 17l-5-5"></path>
                  </svg>
                  Status
                </a>
              </li>
              <li>
                <a class="uk-drop-close" href="#demo" uk-toggle>
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="lucide lucide-check mr-2"
                  >
                    <path d="M20 6 9 17l-5-5"></path>
                  </svg>
                  Priority
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>

      <table
        class="uk-table uk-table-middle uk-table-divider uk-table-hover mt-4"
      >
        <thead>
          <tr>
            <th class="uk-table-shrink p-2">
              <input
                type="checkbox"
                class="uk-checkbox"
                onclick="return false"
              />
            </th>
            <th class="p-2">Task</th>
            <th class="uk-table-expand p-2">Title</th>
            <th class="p-2">Status</th>
            <th class="p-2">Priority</th>
            <th class="uk-table-shrink p-2"></th>
          </tr>
        </thead>
        <tbody>
          {
            data.splice(0, 10).map((a) => (
              <tr class={a.selected ? "uk-active" : ""}>
                <td class="uk-table-shrink p-2">
                  <input
                    class="uk-checkbox"
                    type="checkbox"
                    onclick="return false"
                    checked={a.selected}
                  />
                </td>
                <td class="p-2">{a.id}</td>
                <td class="uk-table-expand max-w-[500px] truncate p-2">
                  <span class="uk-label capitalize">{a.label}</span>
                  <span class="font-medium">{a.title}</span>
                </td>
                <td class="p-2">
                  <TasksStatus status={a.status} />
                </td>
                <td class="p-2">
                  <TasksPriority priority={a.priority} />
                </td>
                <td class="p-2">
                  <button class="uk-icon-button h-8 w-8 border-none">
                    <svg
                      width="15"
                      height="15"
                      viewBox="0 0 15 15"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      class="h-4 w-4"
                    >
                      <path
                        d="M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z"
                        fill="currentColor"
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </button>
                  <div
                    class="uk-drop uk-dropdown"
                    uk-dropdown="mode: click; pos: bottom-right"
                  >
                    <ul class="uk-dropdown-nav uk-nav">
                      <li>
                        <a
                          class="uk-drop-close justify-between"
                          href="#demo"
                          uk-toggle
                        >
                          Edit
                        </a>
                      </li>
                      <li>
                        <a
                          class="uk-drop-close justify-between"
                          href="#demo"
                          uk-toggle
                        >
                          Make a copy
                        </a>
                      </li>
                      <li>
                        <a
                          class="uk-drop-close justify-between"
                          href="#demo"
                          uk-toggle
                        >
                          Favorite
                        </a>
                      </li>
                      <li class="uk-nav-divider" />
                      <li>
                        <a
                          class="uk-drop-close justify-between"
                          href="#demo"
                          uk-toggle
                        >
                          Delete
                          <span class="ml-auto text-xs tracking-widest opacity-60">
                            ⌘⌫
                          </span>
                        </a>
                      </li>
                    </ul>
                  </div>
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>

      <div class="mt-4 flex items-center justify-between px-2">
        <div class="flex-1 text-sm text-muted-foreground">
          1 of 100 row(s) selected.
        </div>
        <div class="flex flex-none items-center space-x-8">
          <div class="flex items-center space-x-2">
            <p class="text-sm font-medium">Rows per page</p>
            <button class="uk-button uk-button-default">
              <div class="flex flex-1 items-center justify-between gap-x-2">
                <span>10</span>
                <svg
                  width="15"
                  height="15"
                  viewBox="0 0 15 15"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4 opacity-50"
                  aria-hidden="true"
                  ><path
                    d="M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z"
                    fill="currentColor"
                    fill-rule="evenodd"
                    clip-rule="evenodd"></path></svg
                >
              </div>
            </button>

            <div
              class="uk-drop uk-dropdown min-w-32"
              uk-drop="mode: click; pos: top-left"
            >
              <ul class="uk-dropdown-nav">
                {
                  [10, 20, 30, 40, 50].map((a) => (
                    <li>
                      <a
                        class="uk-drop-close justify-between"
                        href="#demo"
                        uk-toggle
                      >
                        {a}
                        {a === 10 ? (
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="lucide lucide-check mr-2"
                          >
                            <path d="M20 6 9 17l-5-5" />
                          </svg>
                        ) : (
                          ""
                        )}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>

          <div
            class="flex w-[100px] items-center justify-center text-sm font-medium"
          >
            Page 1 of 10
          </div>

          <div class="flex items-center space-x-2">
            <button class="uk-icon-button h-8 w-8" disabled>
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4"
                ><path
                  d="M6.85355 3.85355C7.04882 3.65829 7.04882 3.34171 6.85355 3.14645C6.65829 2.95118 6.34171 2.95118 6.14645 3.14645L2.14645 7.14645C1.95118 7.34171 1.95118 7.65829 2.14645 7.85355L6.14645 11.8536C6.34171 12.0488 6.65829 12.0488 6.85355 11.8536C7.04882 11.6583 7.04882 11.3417 6.85355 11.1464L3.20711 7.5L6.85355 3.85355ZM12.8536 3.85355C13.0488 3.65829 13.0488 3.34171 12.8536 3.14645C12.6583 2.95118 12.3417 2.95118 12.1464 3.14645L8.14645 7.14645C7.95118 7.34171 7.95118 7.65829 8.14645 7.85355L12.1464 11.8536C12.3417 12.0488 12.6583 12.0488 12.8536 11.8536C13.0488 11.6583 13.0488 11.3417 12.8536 11.1464L9.20711 7.5L12.8536 3.85355Z"
                  fill="currentColor"
                  fill-rule="evenodd"
                  clip-rule="evenodd"></path></svg
              >
            </button>
            <button class="uk-icon-button h-8 w-8" disabled>
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4"
                ><path
                  d="M8.84182 3.13514C9.04327 3.32401 9.05348 3.64042 8.86462 3.84188L5.43521 7.49991L8.86462 11.1579C9.05348 11.3594 9.04327 11.6758 8.84182 11.8647C8.64036 12.0535 8.32394 12.0433 8.13508 11.8419L4.38508 7.84188C4.20477 7.64955 4.20477 7.35027 4.38508 7.15794L8.13508 3.15794C8.32394 2.95648 8.64036 2.94628 8.84182 3.13514Z"
                  fill="currentColor"
                  fill-rule="evenodd"
                  clip-rule="evenodd"></path></svg
              >
            </button>
            <button class="uk-icon-button h-8 w-8" uk-toggle="#demo">
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4"
                ><path
                  d="M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z"
                  fill="currentColor"
                  fill-rule="evenodd"
                  clip-rule="evenodd"></path></svg
              >
            </button>
            <button class="uk-icon-button h-8 w-8" uk-toggle="#demo">
              <svg
                width="15"
                height="15"
                viewBox="0 0 15 15"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4"
                ><path
                  d="M2.14645 11.1464C1.95118 11.3417 1.95118 11.6583 2.14645 11.8536C2.34171 12.0488 2.65829 12.0488 2.85355 11.8536L6.85355 7.85355C7.04882 7.65829 7.04882 7.34171 6.85355 7.14645L2.85355 3.14645C2.65829 2.95118 2.34171 2.95118 2.14645 3.14645C1.95118 3.34171 1.95118 3.65829 2.14645 3.85355L5.79289 7.5L2.14645 11.1464ZM8.14645 11.1464C7.95118 11.3417 7.95118 11.6583 8.14645 11.8536C8.34171 12.0488 8.65829 12.0488 8.85355 11.8536L12.8536 7.85355C13.0488 7.65829 13.0488 7.34171 12.8536 7.14645L8.85355 3.14645C8.65829 2.95118 8.34171 2.95118 8.14645 3.14645C7.95118 3.34171 7.95118 3.65829 8.14645 3.85355L11.7929 7.5L8.14645 11.1464Z"
                  fill="currentColor"
                  fill-rule="evenodd"
                  clip-rule="evenodd"></path></svg
              >
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="lg:hidden">
    <img
      class="dark:hidden"
      loading="lazy"
      src="/images/screenshots/tasks-light.png"
      alt=""
    />
    <img
      class="hidden dark:block"
      loading="lazy"
      src="/images/screenshots/tasks-dark.png"
      alt=""
    />
  </div>
</Example>
